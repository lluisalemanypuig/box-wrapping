
#############
# RELEASE FLAGS

REL_FLAGS = $(BASE_FLAGS) -O3 - DNRELUG

###############
# RELEASE OBJECTS

SOLVER_OBJECTS		= $(REL_BIN_DIR)/clause.o				\
					  $(REL_BIN_DIR)/clause_encoder.o		\
					  $(REL_BIN_DIR)/quadratic_encoder.o	\
					  $(REL_BIN_DIR)/logarithmic_encoder.o	\
					  $(REL_BIN_DIR)/heule_encoder.o
					  

UTILS_OBJECTS		= $(REL_BIN_DIR)/global_info.o			\
					  $(REL_BIN_DIR)/input_data.o			\
					  $(REL_BIN_DIR)/parse_string.o			\
					  $(REL_BIN_DIR)/time.o					\
					  $(REL_BIN_DIR)/wrapped_boxes.o

REL_WRAPPING_BOXES	= $(SOLVER_OBJECTS)	$(UTILS_OBJECTS)


###########
# DIRECTORY

debugdirectory: $(REL_BIN_DIR)
$(REL_BIN_DIR):
	mkdir -p $(REL_BIN_DIR)

######################
# EXECUTABLE

$(REL_BIN_DIR)/$(EXE_NAME): $(REL_WRAPPING_BOXES)
	g++ $(REL_FLAGS) -o $@ $(REL_WRAPPING_BOXES) $(LIBS)

$(REL_BIN_DIR)/main.o: $(SRC_DIR)/main.cpp $(MAIN_DPS)
	g++ $(REL_FLAGS) -c $< -o $@ -I$(INCLUDE)

# --------------
# SOLVER OBJECTS

$(REL_BIN_DIR)/clause.o: $(SOLVER_DIR)/clause.cpp $(CLAUSE_DPS)
	g++ $(REL_FLAGS) -c $< -o $@ -I$(INCLUDE)

$(REL_BIN_DIR)/clause_encoder.o: $(SOLVER_DIR)/clause_encoder.cpp $(CLAUSE_ENC_DPS)
	g++ $(REL_FLAGS) -c $< -o $@ -I$(INCLUDE)

$(REL_BIN_DIR)/quadratic_encoder.o: $(SOLVER_DIR)/quadratic_encoder.cpp $(QUAD_ENC_DPS)
	g++ $(REL_FLAGS) -c $< -o $@ -I$(INCLUDE)

$(REL_BIN_DIR)/logarithmic_encoder.o: $(SOLVER_DIR)/logarithmic_encoder.cpp $(LOG_ENC_DPS)
	g++ $(REL_FLAGS) -c $< -o $@ -I$(INCLUDE)

$(REL_BIN_DIR)/heule_encoder.o: $(SOLVER_DIR)/heule_encoder.cpp $(HEULE_ENC_DPS)
	g++ $(REL_FLAGS) -c $< -o $@ -I$(INCLUDE)

# --------------
# UTILS OBJECTS

$(REL_BIN_DIR)/global_info.o: $(UTILS_DIR)/global_info.cpp $(GLOB_INF_DPS)
	g++ $(REL_FLAGS) -c $< -o $@ -I$(INCLUDE)

$(REL_BIN_DIR)/input_data.o: $(UTILS_DIR)/input_data.cpp $(INPUT_DATA_DPS)
	g++ $(REL_FLAGS) -c $< -o $@ -I$(INCLUDE)

$(REL_BIN_DIR)/parse_string.o: $(UTILS_DIR)/parse_string.cpp $(PARSE_DPS)
	g++ $(REL_FLAGS) -c $< -o $@ -I$(INCLUDE)

$(REL_BIN_DIR)/time.o: $(UTILS_DIR)/time.cpp $(TIME_DPS)
	g++ $(REL_FLAGS) -c $< -o $@ -I$(INCLUDE)

$(REL_BIN_DIR)/wrapped_boxes.o: $(UTILS_DIR)/wrapped_boxes.cpp $(WRAPPED_BOXES)
	g++ $(REL_FLAGS) -c $< -o $@ -I$(INCLUDE)

############

releaseclean:
	rm -f $(REL_WRAPPING_BOXES)

releasedistclean:
	make -f $(RULES_DIR)/Makefile releaseclean
	rm -f $(REL_BIN_DIR)/$(EXE_NAME)
	rmdir --ignore-fail-on-non-empty $(REL_BIN_DIR)
